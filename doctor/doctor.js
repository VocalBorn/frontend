//Âª∫Á´ãÈÖçÂ∞ç
document.addEventListener("DOMContentLoaded", () => {
  const sections = document.querySelectorAll(".page-section");
  const links = document.querySelectorAll(".nav-link");

  const openBtn = document.getElementById("open-token-section");
  const modal = document.getElementById("token-modal");
  const closeBtn = document.getElementById("close-token");
  const backBtn = document.getElementById("back-btn");
  const qrImage = document.getElementById("qr-image");
  const qrLink = document.getElementById("qr-link");

  // üìÑ ÂàáÊèõÂà∞ÊåáÂÆö section
  function showSection(id) {
    sections.forEach(sec => {
      if (sec.id === id) {
        sec.classList.add("active");
      } else {
        sec.classList.remove("active");
      }
    });
  }

  // üìÑ ÂÅ¥ÈÇäÊ¨ÑÊàñ header ‰∏äÁöÑÂàáÊèõÊåâÈàï
  links.forEach(link => {
    link.addEventListener("click", e => {
      e.preventDefault();
      const target = link.getAttribute("data-target");
      showSection(target);
    });
  });

  // üì° ÂæûÂæåÁ´ØÁî¢Áîü token
  async function fetchTokenAndShowQR() {
    const token = localStorage.getItem("token"); // ÁôªÂÖ•ÊôÇÂ≠ò‰∏ã‰æÜÁöÑtoken

    if (!token) {
      alert("Ë´ãÂÖàÁôªÂÖ•");
      return;
    }

    try {
      const res = await fetch("https://api-vocalborn.r0930514.work/pairing/generate-token", {
        method: "POST",
        headers: {
          "Authorization": "Bearer " + token,
          "Content-Type": "application/json"
        },
        body: JSON.stringify({})  // Âä†‰∏äÈÄôË°åÔºåÂÇ≥Á©∫ÁöÑ JSON Áâ©‰ª∂
      });

      if (!res.ok) {
        const errorText = await res.text();
        alert(errorText);
        console.error("‚ùå ÂæåÁ´ØÈåØË™§Ë®äÊÅØ:", errorText);
        throw new Error("ÂæåÁ´ØÁî¢Áîü token Â§±Êïó");
      }
      

      const data = await res.json();

      // ‚¨á‚¨á‚¨á ‰ΩøÁî® qr_data ‰ΩúÁÇ∫ QRCode ÁöÑÂÖßÂÆπ
      const url = data.qr_data;

      const qrSrc = `https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${encodeURIComponent(url)}`;
      qrImage.src = qrSrc;
      qrLink.textContent = url;
      qrLink.href = url;
      qrLink.target = "_blank";

      modal.classList.remove("hidden");
    } catch (err) {
      alert("ÁÑ°Ê≥ïÁî¢ÁîüÈÖçÂ∞ç QR CodeÔºåË´ãÁ®çÂæåÂÜçË©¶");
    }
  }

  // ‚ú® Èªû„ÄêÂª∫Á´ãÈÖçÂ∞ç„Äë => ÊâìÈñã modal ‰∏¶ÁîüÊàê QR
  openBtn.addEventListener("click", fetchTokenAndShowQR);

  // ‚ú® ÈóúÈñâ modal ÁöÑÂπæÁ®ÆÊñπÂºè
  [closeBtn, backBtn].forEach(btn => {
    if (btn) {
      btn.addEventListener("click", () => {
        modal.classList.add("hidden");
        clearQRCode();
      });
    }
  });

  modal.addEventListener("click", (e) => {
    if (e.target === modal) {
      modal.classList.add("hidden");
      clearQRCode();
    }
  });

  // üìÑ Ê∏ÖÁ©∫ QRCode
  function clearQRCode() {
    qrImage.src = "";
    qrLink.textContent = "";
    qrLink.href = "";
  }
});

//Êü•ÁúãÂ∑≤ÈÖçÂ∞çÁóÖÊÇ£Ë≥áÊñô
document.addEventListener("DOMContentLoaded", function () {
  const pairedCountElement = document.getElementById("paired-count");
    const viewPatBtn = document.getElementById("view-pat-btn");
    const patientListSection = document.getElementById("patient-list");
    const patientDetailSection = document.getElementById("patient-detail");
    const patientListContainer = patientListSection.querySelector(".widget-card");
    const backToHomeBtn = document.getElementById("back-to-home");
    const backToListBtn = document.getElementById("back-to-list");
    const backToHomeBtnn = document.getElementById("back-btn");

    // ‚úÖ Á∂ÅÂÆö„ÄåÊü•ÁúãÁ¥ÄÈåÑ„ÄçÊåâÈàï
    const viewLogBtn = document.getElementById("view-log-btn");
    const logDetailSection = document.getElementById("log-detail");

    const patientIdField = document.getElementById("patient-id");
    const patientNameField = document.getElementById("patient-name-field");
    const patientAgeField = document.getElementById("patient-age");
    const patientGenderField = document.getElementById("patient-gender");
    const patientDiagnosisField = document.getElementById("patient-diagnosis");
    const patientNotesField = document.getElementById("patient-notes");

    let patients = []; //ÁóÖÊÇ£‰∫∫Êï∏
    

    // ‚úÖ ÂàáÊèõÈ°ØÁ§∫ÂçÄÂ°äÔºà‰øÆÊ≠£ active È°ûÂà•ÂïèÈ°åÔºâ
    function showSection(sectionToShow) {
        document.querySelectorAll(".page-section").forEach(sec => {
            sec.classList.remove("active");
            sec.style.display = "none";
        });

        sectionToShow.classList.add("active");
        sectionToShow.style.display = "block";
    }

    // ‚úÖ ÈªûÊìäÈ¶ñÈ†ÅÁöÑ„ÄåÊü•ÁúãÁóÖÊÇ£„Äç‚Üí ÈÄ≤ÂÖ•ÁóÖÊÇ£ÂàóË°®
    fetchPatientList(); //ÂÖàÊäìË≥áÊñôËÆÄÂèñÂ∑≤ÈÖçÂ∞çÂ§öÂ∞ë‰∫∫ÔºàÊèõÊàêÁúüË≥áÊñôÂæåË¶ÅÊîπÔºâ
    viewPatBtn.addEventListener("click", async () => {
        showSection(patientListSection);
    });

    // ‚úÖ ÈªûÊìäÈ¶ñÈ†ÅÁöÑ„ÄåÊü•ÁúãÁ¥ÄÈåÑ„Äç‚Üí ÈÄ≤ÂÖ•Á¥ÄÈåÑÈ°ØÁ§∫È†ÅÈù¢
    viewLogBtn.addEventListener("click", () => {
        showSection(logDetailSection);
        renderLogPatients(); // <-- ÈÄôÊòØ‰Ω†Ë¶ÅÈ°ØÁ§∫„Äå‰ªäÊó•ÁóÖÊÇ£Á∑¥ÁøíÈÄ≤Â∫¶„ÄçÁöÑÂáΩÊï∏Ôºà‰∏ãÈù¢ÊúÉÁµ¶Ôºâ
    });

    // ‚úÖ Âæû API ÊäìÂèñÁóÖÊÇ£Ë≥áÊñô
    async function fetchPatientList() {
        try {
            const token = localStorage.getItem("token");
            const response = await fetch("https://api-vocalborn.r0930514.work/therapist/my-clients", {
                method: "GET",
                headers: { "Authorization": `Bearer ${token}` }
            });

            
            if (response.ok) {
                patients = await response.json();
            }

            if (!patients || patients.length === 0) {
                patients = [
                    {
                        client_id: "TEST-001",
                        client_info: {
                            name: "ÔºàÂÅáË≥áÊñôÔºâÁéãÂ∞èÊòé",
                            age: 10,
                            gender: "Áî∑",
                            diagnosis: "Ë™ûË®ÄÁôºÂ±ïÈÅ≤Á∑©",
                            notes: "ÈÄôÊòØÊ∏¨Ë©¶ÂÅáË≥áÊñô"
                        }
                    },
                    {
                        client_id: "TEST-002",
                        client_info: {
                            name: "ÔºàÂÅáË≥áÊñôÔºâÊùéÂ∞èÁæé",
                            age: 8,
                            gender: "Â•≥",
                            diagnosis: "ÊßãÈü≥ÈöúÁ§ô",
                            notes: "ÊØèÈÄ± 2 Ê¨°Ê≤ªÁôÇ"
                        }
                    }
                ];
            }
            pairedCountElement.textContent = "ÁõÆÂâçÈÖçÂ∞çÔºö"+patients.length+"‰Ωç";
            renderPatientList(patients);
        } catch (error) {
            console.error("ÁÑ°Ê≥ïÂèñÂæóÁóÖÊÇ£ÂàóË°®", error);
        }
        
    }

    //ÁõÆÂâçÂ∑≤ÈÖçÂ∞çÂπæ‰ΩçÁóÖÊÇ£
    pairedCountElement.textContent = "ÁõÆÂâçÈÖçÂ∞çÔºö"+(patients.length)+"‰Ωç";

    // ‚úÖ Ê∏≤ÊüìÁóÖÊÇ£ÂàóË°®
    function renderPatientList(patients) {
        // ÂÖàÊ∏ÖÊéâËàäÁöÑÂç°ÁâáÔºà‰øùÁïôËøîÂõûÊåâÈàïÔºâ
        patientListContainer.querySelectorAll(".patient-card").forEach(card => card.remove());

        patients.forEach(item => {
            const client = item.client_info || {};
            const card = document.createElement("div");
            card.classList.add("patient-card");
            card.textContent = client.name || `ÁóÖÊÇ£ (${item.client_id})`;

            // ‚úÖ ÈªûÊìäÂç°Áâá ‚Üí È°ØÁ§∫Ë©≥Á¥∞Ë≥áÊñô
            card.addEventListener("click", () => showPatientDetail(item));
            patientListContainer.insertBefore(card, backToHomeBtn);
        });
    }

    // ‚úÖ È°ØÁ§∫Ë©≥Á¥∞Ë≥áÊñô
    function showPatientDetail(item) {
        const client = item.client_info || {};
        patientIdField.value = item.client_id || "Êú™Êèê‰æõ";
        patientNameField.value = client.name || "Êú™Êèê‰æõ";
        patientAgeField.value = client.age || "Êú™Êèê‰æõ";
        patientGenderField.value = client.gender || "Êú™Êèê‰æõ";
        patientDiagnosisField.value = client.diagnosis || "Êú™Êèê‰æõ";
        patientNotesField.value = client.notes || "Êú™Êèê‰æõ";

        showSection(patientDetailSection);
    }

    // ‚úÖ ËøîÂõûÊåâÈàï
    backToHomeBtn.addEventListener("click", () => {
        showSection(document.getElementById("home"));
    });

    //ÁóÖÊÇ£Á∑¥ÁøíÈÄ≤Â∫¶ÁöÑËøîÂõûÊåâÈàï
    backToHomeBtnn.addEventListener("click", () => {
        showSection(document.getElementById("home"));
    });

    backToListBtn.addEventListener("click", () => {
        showSection(patientListSection);
    });

    // È†êË®≠È°ØÁ§∫È¶ñÈ†Å
    showSection(document.getElementById("home"));
});
